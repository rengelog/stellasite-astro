---
import { getUniqueTags } from '@/utils/getTags';
import { getCollection } from 'astro:content';

// タグ取得時にundefinedを除外
const tags = await getUniqueTags();

const posts = await getCollection('blog');

const tagCount = posts.reduce((acc, post) => {
  const postTags = Array.isArray(post.data.tags) 
    ? post.data.tags.filter(Boolean) 
    : [post.data.tag].filter(Boolean);

  postTags.forEach(tag => {
    if (tag) {
      acc[tag] = (acc[tag] || 0) + 1;
    }
  });
  return acc;
}, {});

const baseURL = import.meta.env.PUBLIC_BASE_URL || "";
const totalPosts = posts.length;
---

<div class="tag-sidebar">
  <h2>タグ</h2>
  <ul class="tag-list">
    {tags.map(tag => {
      // タグ名のバリデーション
      if (!tag || typeof tag !== 'string') return null;
      
      const encodedTag = encodeURIComponent(tag);
      const count = tagCount[tag] || 0;
      
      return (
        <li>
          <a href={`${baseURL}/tag/${encodedTag}/`}>
            {tag}
            <span class="tag-count">{count}</span>
          </a>
        </li>
      );
    })}
  </ul>
</div>
