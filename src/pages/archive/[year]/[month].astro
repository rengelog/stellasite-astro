---
import { getCollection } from 'astro:content';
import BlogLayout from "@/layouts/BlogLayout.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const uniqueDates = [...new Set(allPosts.map(post => {
    const date = new Date(post.data.date);
    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;
  }))];

  return uniqueDates.map(date => {
    const [year, month] = date.split('-');
    return { params: { year, month } };
  });
}

const { year, month } = Astro.params;
const allPosts = await getCollection('blog');
const posts = allPosts
  .filter(post => {
    const postDate = new Date(post.data.date);
    return postDate.getFullYear().toString() === year && (postDate.getMonth() + 1).toString().padStart(2, '0') === month;
  })
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()); // 新しい順にソート

const baseURL = import.meta.env.PUBLIC_BASE_URL || "";
---

<BlogLayout>
  <h1>{year}年{month}月: アーカイブ</h1>
  <ul class="archive-list">
    {posts.map(post => (
      <li>
        <a href={`${baseURL}/blog/${post.slug}/`}>
          {post.data.title}
        </a>
        {post.data.date && (
          <span> - {new Date(post.data.date).toLocaleDateString()}</span>
        )}
      </li>
    ))}
  </ul>
</BlogLayout>
